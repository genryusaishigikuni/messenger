name: CI-CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build and test services
        run: |
          docker compose -f docker-compose.yml up --build --detach
          sleep 10
          curl -X POST -H "Content-Type: application/json" \
            -d '{"username": "test", "password": "test"}' \
            http://localhost:8082/api/auth/register
          TOKEN=$(curl -X POST -H "Content-Type: application/json" \
            -d '{"username": "test", "password": "test"}' \
            http://localhost:8082/api/auth/login | jq -r .token)
          curl -H "Authorization: Bearer $TOKEN" http://localhost:8082/api/auth/validate
          curl -f http://localhost:8081/api/channels || exit 1
          curl -f http://localhost:8083/api/presence || exit 1

      - name: Log in to Docker Hub
        if: github.ref == 'refs/heads/master'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push images to Docker Hub
        if: github.ref == 'refs/heads/master'
        run: |
          docker tag messenger-auth-service ${{ secrets.DOCKER_USERNAME }}/messenger-auth-service:latest
          docker tag messenger-message-service ${{ secrets.DOCKER_USERNAME }}/messenger-message-service:latest
          docker tag messenger-presence-service ${{ secrets.DOCKER_USERNAME }}/messenger-presence-service:latest
          docker tag messenger-gateway-service ${{ secrets.DOCKER_USERNAME }}/messenger-gateway-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/messenger-auth-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/messenger-message-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/messenger-presence-service:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/messenger-gateway-service:latest

  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Log in to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:login

      - name: Build and Tag Docker Image
        run: |
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .

      - name: Push Docker Image to Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:push web --app ${{ secrets.HEROKU_APP_NAME }}

      - name: Release the Docker Image
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
